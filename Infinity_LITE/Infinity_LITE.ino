#include <Wire.h>
#include <Time.h>
#include <TimeLib.h>
#include <Keypad.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include <DS3231.h>
tmElements_t tm;
DS3231  rtc(SDA, SCL);
#define OLED_ADDR   0x3C
Adafruit_SSD1306 display(-1);
#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif
const unsigned char PROGMEM Startup [] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xc0,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x40,0x00
,0x06,0x00,0x01,0xd0,0x00,0xd0,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x40,0x00
,0x00,0x00,0x03,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x40,0x00
,0x00,0x00,0x02,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x40,0x00
,0x02,0x1f,0x02,0x10,0xf8,0xdf,0xcc,0x04,0x08,0x01,0x8f,0x87,0xf0,0x7c,0x5f,0x00
,0x02,0x61,0x82,0x13,0x0c,0xd0,0x0c,0x04,0x08,0x01,0x98,0x64,0x00,0xc6,0x70,0xc0
,0x02,0x40,0xc2,0x12,0x06,0xd0,0x0c,0x04,0x08,0x21,0xb0,0x24,0x01,0x80,0x60,0x40
,0x02,0xc0,0x4f,0x96,0x02,0xd0,0x0c,0x04,0x08,0x21,0xa0,0x34,0x01,0x00,0x40,0x60
,0x02,0x80,0x42,0x14,0x02,0xd0,0x0c,0x04,0x08,0x21,0xa0,0x14,0x01,0x00,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xd0,0x0c,0x04,0x08,0x21,0xa0,0x34,0x01,0x00,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xd8,0x04,0x04,0x08,0x61,0xa0,0x36,0x01,0x00,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xc8,0x06,0x08,0x0c,0x61,0x30,0x33,0x05,0x80,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xc6,0x73,0x38,0x04,0xf3,0x1c,0xf1,0x9c,0xc6,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0x43,0xc1,0xe0,0x03,0x9e,0x07,0x90,0xf0,0x7c,0x40,0x20
,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0
,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x80,0x00,0x7f,0x80,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xe0,0x01,0xff,0xe0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xf8,0x07,0xff,0xf8,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xfc,0x0f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xfe,0x1f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0xc0,0xff,0x3f,0xc0,0xfe,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x3f,0xff,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x1f,0xfe,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1e,0x00,0x07,0xfc,0x00,0x1e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x07,0xf8,0x00,0x1f,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x07,0xf8,0x00,0x1f,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x0f,0xfc,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x1f,0xfe,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x80,0x7f,0xff,0x80,0x7e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0xc1,0xff,0x3f,0xe0,0xfe,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xfe,0x1f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xf8,0x0f,0xff,0xf8,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xf0,0x03,0xff,0xf0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xc0,0x00,0xff,0xe0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x40,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0xc0,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0xc0,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x65,0xe3,0xc0
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xc6,0x20
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xcc,0x30
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xcf,0xf0
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xcc,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xcc,0x30
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0xc6,0x60
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x64,0x63,0xc0
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
const unsigned char PROGMEM Copyright [] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x06,0x00,0x00,0x10,0x00,0x04,0x21,0x3c,0x01,0x10,0x00,0x08,0x00,0x41,0x00,0x00
,0x09,0x00,0x00,0x00,0x21,0x0a,0x11,0x0c,0x01,0x10,0x00,0x08,0x00,0xa1,0x00,0x00
,0x08,0x90,0x90,0xd2,0x3b,0x12,0x93,0x08,0x01,0x12,0x13,0x19,0x88,0xa1,0x10,0x80
,0x00,0x21,0x52,0x95,0xa9,0x02,0x91,0x08,0x01,0xf5,0xb5,0x2a,0x50,0xa1,0x6a,0x40
,0x00,0x04,0x2a,0x90,0x89,0x04,0x91,0x00,0x01,0x30,0xa0,0x43,0x02,0xa1,0x4a,0x00
,0x08,0x84,0x28,0x90,0x00,0x08,0x91,0x10,0x61,0x17,0xa0,0x40,0xc2,0xa1,0x4a,0x00
,0x08,0xa5,0x0c,0x94,0x21,0x08,0x91,0x10,0x01,0x14,0xa0,0x0a,0x52,0xa1,0x4a,0x40
,0x07,0x39,0xc4,0x97,0x21,0x1e,0x61,0x10,0x01,0x17,0xa7,0x39,0x9c,0x91,0x49,0x90
,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x01,0x18,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0xff,0xff,0xfc,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x42,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0xc6,0x52,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x84,0x82,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x84,0x42,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0xfc,0x22,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x84,0x12,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x84,0x12,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0xc6,0x92,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x84,0x00,0x00,0x43,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x83,0xff,0xff,0x83,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x7f,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xc3,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0xc0,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x83,0xfe,0x03,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x83,0xfe,0x02,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x1f,0xff,0xff,0xfe,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x44,0x84,0x00,0x00,0xe0,0x01,0x10,0x00,0x40,0x01,0xc0,0x00,0x10,0x00,0x00
,0x00,0x4c,0x81,0x40,0x00,0x90,0x01,0x10,0x00,0x40,0x01,0xb0,0x00,0x10,0x00,0x00
,0x00,0x0c,0x93,0xe4,0x20,0x94,0x21,0x11,0x04,0x44,0xa1,0x14,0x90,0x94,0x42,0x00
,0x00,0x28,0x35,0x4a,0xd0,0x94,0xa1,0xf4,0xa2,0x52,0xf1,0xa4,0xa8,0x54,0xac,0x00
,0x00,0x22,0x25,0x5a,0x90,0xf2,0x81,0x10,0xaa,0x52,0x91,0xb4,0xa2,0x10,0xa8,0x00
,0x00,0x23,0x25,0x5e,0x90,0x82,0x01,0x16,0xaa,0x5e,0x91,0x14,0x9a,0x13,0xe8,0x00
,0x00,0x33,0x25,0x52,0x90,0x93,0x01,0x14,0x92,0x52,0x91,0x14,0xa2,0x52,0x18,0x00
,0x00,0x11,0x25,0x6e,0x90,0xf1,0x21,0x17,0x91,0xcc,0x91,0xe3,0xb9,0xd2,0xe8,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
Time  t;
const byte ROWS = 4;
const byte COLS = 4;
int piezoPin = 13;
int randnum;
int sides = 7;
bool sound = true;
bool dispon = true;
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
int minut = 10;
int hou = 10;
int count = 0;
bool edithour = true;
bool stopped = false;
bool alarm = true;
byte rowPins[ROWS] = {5, 4, 3, 2};
byte colPins[COLS] = {9, 8, 7, 6};

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );
int menupos = 0;
const int buttonPin = 4;  
const int buttonPin2 = 7;  
int counter = 0;
int buttonState = 0;
int buttonState2 = 0;
int x = 128;
int clock = 0;
void setup() {
  Serial.begin(9600);
  pinMode(buttonPin, INPUT);
  pinMode(buttonPin2, INPUT);
  rtc.begin();
  Wire.begin();  
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();
  display.display();
  delay(500);
  while (count < 33){
  x = x -4;
  count = count +1;
  display.clearDisplay();
  display.drawBitmap(x, 0, Startup, 128, 64, WHITE);
  display.display();  
  }
  delay(2000);
  display.clearDisplay();
  display.drawBitmap(0, 0, Copyright, 128, 64, WHITE);
  display.display();
  delay(2000);
  x  = 60;
}
void loop() {
  t = rtc.getTime();
   char key = keypad.getKey();
  if (key){
    Serial.println(x);
    if (sound == true){
      tone(piezoPin, 261.472, 50);
    }
  }
  if (key != NO_KEY && (key=='1')){
    clock = clock +1;
  }
  if (clock > 3){
    clock = 0;
  }
  if (alarm == true && t.hour == hou && t.min == minut){
    tone(piezoPin, 261.472, 20);
    tone(piezoPin, 293.7, 200);
    tone(piezoPin, 329.6, 20);
    tone(piezoPin, 349.2, 200);
    delay(100);
    tone(piezoPin, 261.472, 20);
    tone(piezoPin, 293.7, 200);
    tone(piezoPin, 329.6, 20);
    tone(piezoPin, 349.2, 200);
    delay(100);
    tone(piezoPin, 261.472, 20);
    tone(piezoPin, 293.7, 200);
    tone(piezoPin, 329.6, 20);
    tone(piezoPin, 349.2, 200);
    delay(500);
    tone(piezoPin, 261.472, 20);
    tone(piezoPin, 293.7, 200);
    tone(piezoPin, 329.6, 20);
    tone(piezoPin, 349.2, 200);
    delay(100);
    tone(piezoPin, 261.472, 20);
    tone(piezoPin, 293.7, 200);
    tone(piezoPin, 329.6, 20);
    tone(piezoPin, 349.2, 200);
    delay(100);
    tone(piezoPin, 261.472, 20);
    tone(piezoPin, 293.7, 200);
    tone(piezoPin, 329.6, 20);
    tone(piezoPin, 349.2, 200);
        alarm = false;
  }
  if (dispon == true){
  if (clock == 0){
  menupos = 0;
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(15,16);
  display.print(rtc.getTimeStr());
  display.setCursor(15,55);
  display.setTextSize(1);
  display.print(rtc.getDateStr());
  display.setCursor(90,55);
  display.print(round((rtc.getTemp()*9)/5+32));  
  display.setCursor(105,55);
  display.print("F");
  display.setCursor(0,0);
  display.print("---------------------");
  display.setCursor(0,38);
  display.print("---------------------");
  if (alarm == true){
    display.setTextSize(1);
     display.print("A");
    display.setCursor(0,50);
    
  }
  if (key != NO_KEY && (key=='2')){
    if (alarm == true){
      alarm = false;
    }
    else{
      alarm = true;
    }
  }  
  if (key != NO_KEY && (key=='3')){
    if (sound == true){
      sound = false;
    }
    else{
      sound = true;
      tone(piezoPin, 261.472, 50);
    }
    }
     if (key != NO_KEY && (key=='A')){
      dispon = false;
    }
  display.display();
  }
  if (clock == 1){
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0,0);
  display.print("Counter");
  display.setTextSize(2);
  display.setCursor(60,15);
  display.print(counter);
  display.display();
  if (key != NO_KEY && (key=='3')){
    counter = counter +1;
  }
  if (key != NO_KEY && (key=='2')){
    counter = 0;
  }
  }
  if (clock == 2){
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0,0);
  display.print("Alarm");
  display.setTextSize(2);
  display.setCursor(90,15);
  display.print(minut);
    display.setCursor(82,15);
  display.print(":");
    display.setCursor(60,15);
  display.print(hou);
  display.setCursor(x,30);
  display.print("--");
  display.display();
  if (key != NO_KEY && (key=='3')){
    if (edithour == true){
      hou = hou+1;
    }
    else{
      minut = minut+1;
    }
  }
  if (key != NO_KEY && (key=='A')){
    if (edithour == true){
      hou = hou-1;
    }
    else{
      minut = minut-1;
    }
  }
  if (key != NO_KEY && (key=='2')){
    if (edithour == true){
      edithour = false;
      x = 90;
    }
    else if (edithour == false) {
      edithour = true;
      x = 60;
    }
  }
  if (hou > 23){
    hou = 0;
  }
  if (hou < 0){
    hou = 23;
  }
  if (minut > 59){
    minut = 0;
  }
  if (minut < 0){
    minut = 59;
  }
  }
  if (clock == 3){
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0,0);
  display.print("Dice Roller");
  display.setTextSize(2);
  display.setCursor(90,15);
  display.print(randnum);
   display.setTextSize(1);
  display.setCursor(5,40);
  display.print("Sides:");
  display.setCursor(45,40);
  display.print((sides)-1);
  display.display();
  if (key != NO_KEY && (key=='A')){
    randnum = random(1, sides);
  }
  if (key != NO_KEY && (key=='2')){
    sides = sides +1;
  }
  if (key != NO_KEY && (key=='3')){
    sides = sides -1;
  }
  }
  }
  else {
    display.clearDisplay();
    display.display();
     if (key){
dispon = true;
    }
    }
  }




