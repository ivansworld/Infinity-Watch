#include <Wire.h>
#include <Time.h>
#include <TimeLib.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include <DS3231.h>
DS3231  rtc(SDA, SCL);
#define OLED_ADDR   0x3C
Adafruit_SSD1306 display(-1);
#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif
const unsigned char PROGMEM Startup [] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0xc0,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x40,0x00
,0x06,0x00,0x01,0xd0,0x00,0xd0,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x40,0x00
,0x00,0x00,0x03,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x40,0x00
,0x00,0x00,0x02,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x40,0x00
,0x02,0x1f,0x02,0x10,0xf8,0xdf,0xcc,0x04,0x08,0x01,0x8f,0x87,0xf0,0x7c,0x5f,0x00
,0x02,0x61,0x82,0x13,0x0c,0xd0,0x0c,0x04,0x08,0x01,0x98,0x64,0x00,0xc6,0x70,0xc0
,0x02,0x40,0xc2,0x12,0x06,0xd0,0x0c,0x04,0x08,0x21,0xb0,0x24,0x01,0x80,0x60,0x40
,0x02,0xc0,0x4f,0x96,0x02,0xd0,0x0c,0x04,0x08,0x21,0xa0,0x34,0x01,0x00,0x40,0x60
,0x02,0x80,0x42,0x14,0x02,0xd0,0x0c,0x04,0x08,0x21,0xa0,0x14,0x01,0x00,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xd0,0x0c,0x04,0x08,0x21,0xa0,0x34,0x01,0x00,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xd8,0x04,0x04,0x08,0x61,0xa0,0x36,0x01,0x00,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xc8,0x06,0x08,0x0c,0x61,0x30,0x33,0x05,0x80,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0xc6,0x73,0x38,0x04,0xf3,0x1c,0xf1,0x9c,0xc6,0x40,0x20
,0x02,0x80,0x42,0x14,0x02,0x43,0xc1,0xe0,0x03,0x9e,0x07,0x90,0xf0,0x7c,0x40,0x20
,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x07,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe0
,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x7f,0x80,0x00,0x7f,0x80,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xe0,0x01,0xff,0xe0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xf8,0x07,0xff,0xf8,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xfc,0x0f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xfe,0x1f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0xc0,0xff,0x3f,0xc0,0xfe,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x3f,0xff,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x1f,0xfe,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1e,0x00,0x07,0xfc,0x00,0x1e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x07,0xf8,0x00,0x1f,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x07,0xf8,0x00,0x1f,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x0f,0xfc,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x00,0x1f,0xfe,0x00,0x3e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0x80,0x7f,0xff,0x80,0x7e,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x1f,0xc1,0xff,0x3f,0xe0,0xfe,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x0f,0xff,0xfe,0x1f,0xff,0xfc,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x07,0xff,0xf8,0x0f,0xff,0xf8,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x03,0xff,0xf0,0x03,0xff,0xf0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x01,0xff,0xc0,0x00,0xff,0xe0,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x1f,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0c,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0c,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0c,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf8,0x9f,0x8f,0xc3,0xf0
,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x8c,0x9c,0xcc,0x66,0x30
,0x30,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0c,0x98,0x4c,0x20,0x30
,0x10,0x41,0xc0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7c,0x98,0x6c,0x21,0xf0
,0x10,0xc1,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x8c,0x98,0x6c,0x27,0x10
,0x08,0x80,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x0c,0x98,0x4c,0x24,0x30
,0x08,0x80,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x9c,0x9c,0xcc,0x26,0x30
,0x0d,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xf4,0x9f,0x8c,0x23,0xd0
,0x05,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00
,0x07,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00
,0x02,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
const unsigned char PROGMEM Clock [] = {
  0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x01,0xff,0x80,0x00
,0x00,0x07,0xff,0xe0,0x00
,0x00,0x1e,0x00,0x78,0x00
,0x00,0x78,0x18,0x1e,0x00
,0x00,0xe0,0x18,0x07,0x00
,0x01,0x8c,0x18,0x31,0x80
,0x03,0x0c,0x18,0x30,0xc0
,0x06,0x00,0x18,0x00,0x60
,0x0e,0x00,0x18,0x00,0x70
,0x0c,0x00,0x18,0x00,0x30
,0x19,0x00,0x18,0x00,0x98
,0x1b,0x00,0x18,0x00,0xd8
,0x30,0x00,0x18,0x00,0x08
,0x30,0x00,0x18,0x00,0x0c
,0x30,0x00,0x18,0x00,0x0c
,0x20,0x00,0x18,0x00,0x04
,0x20,0x00,0x3c,0x00,0x04
,0x60,0x00,0x3f,0xfc,0x06
,0x6c,0x00,0x67,0xfc,0x36
,0x64,0x00,0x7f,0xfc,0x26
,0x20,0x00,0x3c,0x00,0x04
,0x20,0x00,0x00,0x00,0x04
,0x30,0x00,0x00,0x00,0x0c
,0x30,0x00,0x00,0x00,0x0c
,0x30,0x00,0x00,0x00,0x0c
,0x1b,0x00,0x00,0x00,0xd8
,0x19,0x00,0x00,0x00,0xd8
,0x0c,0x00,0x00,0x00,0x30
,0x0c,0x00,0x00,0x00,0x30
,0x06,0x00,0x00,0x00,0x60
,0x03,0x08,0x00,0x10,0xc0
,0x01,0x8c,0x00,0x31,0x80
,0x00,0xc0,0x18,0x03,0x00
,0x00,0x70,0x18,0x0e,0x00
,0x00,0x3e,0x00,0x7c,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x01,0xff,0x80,0x00
};
const unsigned char PROGMEM Data [] = {
  0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x01,0xf0
,0x00,0x00,0x00,0x03,0x98
,0x00,0x00,0x00,0x07,0x8c
,0x00,0x00,0x02,0x0f,0xb6
,0x00,0x00,0x7f,0x1d,0x92
,0x00,0x7f,0xf1,0x39,0xc2
,0x7f,0xf8,0x01,0x62,0x7e
,0x60,0x00,0x00,0xc4,0x7c
,0x40,0x00,0x01,0x88,0x9c
,0x60,0x00,0x63,0x11,0x38
,0x60,0x3f,0xe2,0x22,0x60
,0x23,0xf8,0x06,0x44,0xc0
,0x20,0x00,0x0c,0x89,0x80
,0x20,0x00,0x19,0x13,0x00
,0x30,0x00,0x32,0x26,0x00
,0x30,0x07,0x3c,0x4c,0x00
,0x30,0xff,0x20,0x98,0x00
,0x10,0xe0,0x27,0x70,0x00
,0x10,0x00,0x21,0xe4,0x00
,0x18,0x00,0x61,0xc6,0x00
,0x18,0x07,0x7f,0x02,0x00
,0x08,0x7f,0x78,0x02,0x00
,0x0c,0x78,0x00,0x03,0x00
,0x0c,0x00,0x00,0x01,0x00
,0x0c,0x00,0x00,0x01,0x80
,0x04,0x00,0x00,0x01,0x80
,0x04,0x00,0x00,0x00,0xc0
,0x06,0x00,0x00,0x00,0xc0
,0x06,0x00,0x00,0x00,0x60
,0x02,0x00,0x00,0x00,0x70
,0x02,0x00,0x00,0x00,0x30
,0x03,0x00,0x00,0x00,0x78
,0x01,0x00,0x00,0x07,0xf0
,0x01,0x80,0x00,0x7f,0x80
,0x01,0x80,0x0f,0xf0,0x00
,0x00,0xc3,0xff,0x00,0x00
,0x00,0x7f,0xe0,0x00,0x00
};
const unsigned char PROGMEM Stopwatch [] = {
  0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x00,0x00,0x00,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0x00,0xf0,0x00
,0x00,0x1c,0x18,0x18,0x00
,0x00,0x32,0x00,0x4c,0x00
,0x00,0x62,0x00,0x46,0x00
,0x00,0x40,0x00,0x03,0x00
,0x00,0x80,0x00,0x01,0x00
,0x01,0xa0,0x00,0x0d,0x80
,0x01,0x00,0x00,0x3c,0x80
,0x01,0x03,0x00,0xf8,0x80
,0x03,0x07,0x81,0xe0,0xc0
,0x03,0x01,0xff,0x80,0xf0
,0x03,0x00,0x7e,0x00,0x70
,0x03,0xc0,0x24,0x03,0x70
,0x03,0x00,0x1c,0x00,0xf0
,0x03,0x00,0x00,0x00,0xf0
,0x01,0x00,0x00,0x00,0xc0
,0x01,0x00,0x00,0x00,0x80
,0x01,0xa0,0x00,0x05,0x80
,0x00,0x80,0x00,0x01,0x00
,0x00,0xc0,0x00,0x03,0x00
,0x00,0x60,0x00,0x06,0x00
,0x00,0x32,0x00,0x4c,0x00
,0x00,0x18,0x00,0x18,0x00
,0x00,0x0e,0x18,0x70,0x00
,0x00,0x0f,0xc3,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
,0x00,0x0f,0xff,0xf0,0x00
};
int menupos = 0;
const int buttonPin = 4;  
const int buttonPin2 = 7;  
int count = 1;
bool clock = true;
int buttonState = 0;
int buttonState2 = 0;
int x = 0;
void setup() {
  Serial.begin(9600);
  pinMode(buttonPin, INPUT);
  pinMode(buttonPin2, INPUT);
  rtc.begin();
  Wire.begin();  
  display.begin(SSD1306_SWITCHCAPVCC, OLED_ADDR);
  display.clearDisplay();
  display.drawBitmap(0, 0, Startup, 128, 64, WHITE);
  display.display();
  delay(2000);
  while (count < 35){
  x = x +4;
  count = count +1;
  display.clearDisplay();
  display.drawBitmap(x, 0, Startup, 128, 64, WHITE);
  display.display();  
  }
  delay(500);
  display.clearDisplay();
  display.display();
}
void loop() {

if (clock == true){
  menupos = 0;
  display.clearDisplay();
  tmElements_t tm;
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(15,16);
  display.print(rtc.getTimeStr());
  display.setCursor(15,55);
  display.setTextSize(1);
  display.print(rtc.getDateStr());
  display.setCursor(90,55);
  display.print(round((rtc.getTemp()*9)/5+32));  
  display.setCursor(105,55);
  display.print("F");
  display.setCursor(0,0);
  display.print("---------------------");
  display.setCursor(0,38);
  display.print("---------------------");
  display.display();
}
  buttonState = digitalRead(buttonPin);
  if (buttonState == HIGH) {    
    clock = false;
    display.clearDisplay();
    display.drawBitmap(0, 0, Clock, 40, 40, WHITE);
    display.drawBitmap(45, 0, Data, 40, 40, WHITE);
    display.drawBitmap(90, 0, Stopwatch, 40, 40, WHITE);
    display.setCursor(45 * menupos, 45);
    display.print("------");
    display.display();  
    buttonState2 = digitalRead(buttonPin2);
    if (buttonState2 == HIGH) {
    menupos = menupos +1;
    delay (500);                          
    }
    }
  }


